//R0=0, R1=A, R2=B, R6=1, R7=11, R10=10, R11=temp, R12=i,R13=j, R14=k
0_100000_00000_00000_00000_00000_01001	//NOP
0_100010_00000_00000000000000000000		//MOVI R0 = 20'd0
0_100010_00001_00000000000000000001		//MOVI R1 = 20'd1
0_100010_00010_00000000000000000010		//MOVI R2 = 20'd2 
0_100010_00011_00000000000000000011		//MOVI R3 = 20'd3
0_100010_00101_00000000000000000101		//MOVI R5 = 20'd5
0_100010_00110_00000000000000000100		//MOVI R6 = 20'd1
0_100010_00111_00000000000000001011		//MOVI R7  = 20'd11
0_100010_01010_00000000000000001010		//MOVI R10 = 20'd10
0_100010_10000_00000000000000110111		//MOVI R16 = 20'd55
0_100010_10001_00000000000001111010		//MOVI R17 = 20'd122
0_100010_10010_00000000000000111001		//MOVI R18 = 20'd57
0_100010_10011_00000000000000100101		//MOVI R19 = 20'd37
0_100010_10100_00000000000000110110		//MOVI R20 = 20'd54
0_100010_10101_00000000000000110001		//MOVI R21 = 20'd49
0_100010_10110_00000000000000001100		//MOVI R22 = 20'd12
0_100010_10111_00000000000000101011		//MOVI R23 = 20'd43
0_100010_11000_00000000000000010111		//MOVI R24 = 20'd23
0_100010_11001_00000000000000011111		//MOVI R25 = 20'd31
0_011100_10000_00001_00000_00_00001010 //SW   M1(R1+R0<<0)	= R16
0_011100_10001_00010_00000_00_00001010 //SW   M2(R2+R0<<0)	= R17
0_011100_10010_00011_00000_00_00001010 //SW   M3(R3+R0<<0)	= R18
0_001010_10011_00000_00000_00_00000001 //SWI  M4 			= R19
0_011100_10100_00010_00011_00_00001010 //SW   M5(R2+R3<<0) 	= R20
0_011100_10101_00000_00011_01_00001010 //SW   M6(R0+R3<<1) 	= R21
0_011100_10110_00011_00010_01_00001010 //SW   M7(R3+R2<<2) 	= R22
0_001010_10111_00000_00000_00_00000010 //SWI  M8 			= R23
0_011100_11000_00011_00011_01_00001010 //SW   M9 (R3+R3<<1) = R24
0_011100_11001_00010_00010_10_00001010 //SW   M10(R2+R2<<2) = R25

//Sorting Function
0_101000_01100_01100_000000000000001   //ADDI R12 = R12 + 15'd1 i++
0_100010_01110_00000000000000000001    //MOVI R14 = 20'd1
0_100110_01100_01010_0_00000000100000  //BEQ  R12==R10(5) SE(32)!
0_100000_00000_00000_00000_00000_01001 //NOP
0_011100_00001_01100_00000_00_00000010 //LW   R1 = M[i](R12+R0<<0) 
0_100000_01101_01100_01110_00000_00000 //ADD  R13 = R12 + R14 j++
0_100110_01101_00111_0_11111111110100  //BEQ  R13==R7(6) SE(-6) return to i++
0_101000_01110_01110_000000000000001   //ADDI R14 = R14 + 15'd1 
0_011100_00010_01101_00000_00_00000010 //LW   R2 = M[j](R13+R0<<0)
0_100000_01011_00010_00001_00000_00001 //SUB  R11 = R2 - R1
0_100000_01011_01011_11111_00000_01001 //if(R2>R1)R11=0; else 1 
0_100110_01011_00000_0_11111111110100  //BEQ  R11==R0(0) SE(-6)return to j++
0_100000_01011_00001_00000_00000_01001 //SRLI R11 = R1 >> 0     change:execute R1 > R2
0_100000_00001_00010_00000_00000_01001 //SRLI R1  = R2 >> 0     change:execute R1 > R2
0_100000_00010_01011_00000_00000_01001 //SRLI R2  = R11>> 0     change:execute R1 > R2
0_011100_00001_01100_00000_00_00001010 //SW   M[i](R12+R0<<0)= R1  
0_011100_00010_01101_00000_00_00001010 //SW   M[j](R13+R0<<0)= R2
0_100100_0_111111111111111111101000    //j    SE(-12) return to j++
0_100000_00000_00000_00000_00000_01001 //NOP
